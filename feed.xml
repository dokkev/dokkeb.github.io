<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://dokkev.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dokkev.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-11-12T01:22:43+00:00</updated><id>https://dokkev.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Resources for Learning Robotics</title><link href="https://dokkev.github.io/Intro-to-Robotics/" rel="alternate" type="text/html" title="Resources for Learning Robotics"/><published>2024-04-12T00:00:00+00:00</published><updated>2024-04-12T00:00:00+00:00</updated><id>https://dokkev.github.io/Intro-to-Robotics</id><content type="html" xml:base="https://dokkev.github.io/Intro-to-Robotics/"><![CDATA[<p>Robotics research requires multidisciplinary knowledge in mathematics, mechanical engineering, electrical engineering, computer engineering, and computer science. This post provides a collection of resources for learning robotics for beginners.</p> <h2 id="fundamental-robotics-knowledge">Fundamental Robotics Knowledge</h2> <h3 id="robot-configuration">Robot Configuration</h3> <ul> <li><a href="https://www.youtube.com/watch?v=zjMuIxRvygQ&amp;t=33s">Quaternions and Rotation in 3D Space, explained interactively</a></li> <li><a href="https://www.youtube.com/watch?v=d4EgbgTm0Bg&amp;t=469s">Visualizing quaternions (4d numbers) with stereographic projection</a></li> <li><a href="https://www.youtube.com/watch?v=zc8b2Jo7mno">Explaining Gibmal Lock</a></li> <li><a href="https://www.youtube.com/watch?v=FyLNR3edOds&amp;list=PLggLP4f-rq02vX0OQQ5vrCxbJrzamYDfx&amp;index=6">Configuration Space</a></li> <li><a href="https://www.youtube.com/watch?v=hTuW51CpUg4&amp;list=PLggLP4f-rq02vX0OQQ5vrCxbJrzamYDfx&amp;index=9">Task Space and Workspace</a></li> <li><a href="https://www.youtube.com/watch?v=mvGZtO_ruj0&amp;list=PLggLP4f-rq02vX0OQQ5vrCxbJrzamYDfx&amp;index=17">Twist</a></li> <li><a href="https://www.youtube.com/watch?v=0wsYPJPGtKE&amp;list=PLggLP4f-rq02vX0OQQ5vrCxbJrzamYDfx&amp;index=20">Wrenches</a></li> </ul> <h3 id="coordinate-transformation">Coordinate Transformation</h3> <ul> <li><a href="https://www.youtube.com/watch?v=lVjFhNv2N8o">Robotics 1 U1 (Kinematics) S3 (Rotation Matrices) P1 (Rotation Matrices)</a></li> <li><a href="https://www.youtube.com/watch?v=H_94DTWd8ck">2D Coordinate Transformation</a></li> <li><a href="https://www.youtube.com/watch?v=rHLEWRxRGiM">3D Coordinate Transformation</a></li> </ul> <h3 id="jacobian-and-kinematics">Jacobian and Kinematics</h3> <ul> <li><a href="https://www.youtube.com/watch?v=bohL918kXQk">Jacobian Matrix</a></li> <li><a href="https://www.youtube.com/watch?v=hhFzJvaY__U&amp;t=510s">Change of Variables and the Jacobian</a></li> <li><a href="https://www.youtube.com/watch?v=vCEWORZbD3Y&amp;t=55s">Robot Singularities</a></li> <li><a href="https://www.youtube.com/watch?v=vjJgTvnQpBs&amp;t=93s">Singularities</a></li> <li><a href="https://www.youtube.com/watch?v=wgpgNLEEpeY">2D Inverse Kinematics with Graphic Visualization</a></li> <li><a href="https://www.youtube.com/watch?v=VhUA0jf7tI8">Numerical Inverse Kinematics (1)</a></li> <li><a href="https://www.youtube.com/watch?v=24cXvgQl-nk">Numerical Inverse Kinematics (2)</a></li> <li><a href="https://www.youtube.com/watch?v=eQ9E0Zvp9jw&amp;t=198s">Odometery</a></li> </ul> <h3 id="motion-planning">Motion Planning</h3> <ul> <li><a href="https://www.youtube.com/watch?v=Ob3BIJkQJEw">RRT</a></li> <li><a href="https://www.youtube.com/watch?v=s2qrMwqm4D0&amp;list=PLggLP4f-rq02vX0OQQ5vrCxbJrzamYDfx&amp;index=51">Motion Planning in C-Space</a></li> <li><a href="https://msl.cs.illinois.edu/~lavalle/papers/Lav11b.pdf">Motion Planning Tutorial</a></li> </ul> <h3 id="euler-lagrangian-dynamics">Euler-Lagrangian Dynamics</h3> <ul> <li><a href="http://www.aoengr.com/Dynamics/LagrangianMechanicsPendulum.pdf">Simple Pendulum via Lagrangian Mechanics</a></li> <li><a href="https://www.youtube.com/watch?v=1U6y_68CjeY">Lagrangian Formulation of Robot Dynamics</a></li> <li><a href="https://www.youtube.com/watch?v=ZASVKAlegfQ">Inverse Dynamics</a></li> </ul> <h3 id="machine-learning">Machine Learning</h3> <ul> <li><a href="https://www.youtube.com/watch?v=yMgFHbjbAW8">Residual and Least Squares Regression</a></li> <li><a href="https://www.youtube.com/watch?v=aircAruvnKk&amp;list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi">Neural Network</a></li> <li><a href="https://www.youtube.com/watch?v=EKbFIWANwHw">Gradient Descent</a></li> <li><a href="https://www.youtube.com/watch?v=IHZwWFHWa-w&amp;list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi&amp;index=2">Graident Descent in Deep Learning</a></li> <li><a href="https://www.youtube.com/watch?v=oJNHXPs0XDk">Neural Network Architectures</a></li> <li><a href="https://www.youtube.com/watch?v=Ilg3gGewQ5U&amp;list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi&amp;index=3">Backpropagation</a></li> <li><a href="https://www.youtube.com/watch?v=wjZofJX0v4M&amp;list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi&amp;index=5">Transformer (1)</a></li> <li><a href="https://www.youtube.com/watch?v=eMlx5fFNoYc&amp;list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi&amp;index=6">Transformer (2)</a></li> </ul> <hr/> <h2 id="robot-operating-system-ros">Robot Operating System (ROS)</h2> <h3 id="basics-of-ros-2">Basics of ROS 2</h3> <ul> <li><a href="https://docs.ros.org/en/iron/index.html">ROS 2 Documentation</a></li> <li><a href="https://docs.ros.org/en/iron/Tutorials.html">Official ROS 2 Tutorials</a></li> <li><a href="https://articulatedrobotics.xyz/page4/">ROS 2 Tutorials</a> by <a href="https://www.youtube.com/@ArticulatedRobotics">Articulated Robotics</a></li> <li><a href="https://industrial-training-master.readthedocs.io/en/melodic/_source/session3/Intro-to-URDF.html">URDF</a></li> </ul> <h3 id="navigation">Navigation</h3> <ul> <li><a href="https://navigation.ros.org/">Nav2 ROS 2 Package</a></li> <li><a href="https://emanual.robotis.com/docs/en/platform/turtlebot3/navigation/">TurtleBot 3 Navigation</a></li> </ul> <h3 id="motion-planning-1">Motion Planning</h3> <ul> <li><a href="https://moveit.picknik.ai/main/index.html">Moveit 2</a></li> </ul> <hr/> <p>Online Courses</p> <h2 id="mathematics">Mathematics</h2> <h3 id="linear-algebra">Linear Algebra</h3> <ul> <li><a href="https://ocw.mit.edu/courses/18-06-linear-algebra-spring-2010/">Linear Algebra</a> by Gilbert Strang at MIT</li> <li><a href="https://www.3blue1brown.com/topics/linear-algebra">Essence of Linear Algebra</a> by Grant Sanderson (<a href="https://www.youtube.com/@3blue1brown">3Blue1Brown</a>)</li> <li><a href="https://www.khanacademy.org/math/linear-algebra">Linear Algebra</a> by Khan Academy</li> </ul> <h3 id="differential-equation">Differential Equation</h3> <ul> <li><a href="https://www.khanacademy.org/math/differential-equations">Differential Equation</a>by Khan Academy</li> </ul> <h3 id="probability">Probability</h3> <ul> <li><a href="https://www.youtube.com/playlist?list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo">Statistics 110: Probability</a> by Joe Blitzstein at Harvard University</li> </ul> <hr/> <h2 id="robot-mechanics-and-control">Robot Mechanics and Control</h2> <h3 id="robotic-manipulation">Robotic Manipulation</h3> <ul> <li><a href="https://modernrobotics.northwestern.edu/nu-gm-book-resource/foundations-of-robot-motion/">Modern Robotics</a> by Kevin Lynch at Northwestern University</li> <li><a href="https://manipulation.csail.mit.edu/index.html">Robotic Manipulation</a> by Russ Tedrake at MIT</li> </ul> <h3 id="optimal-control">Optimal Control</h3> <ul> <li><a href="https://underactuated.mit.edu/index.html">Underacutated Robotics</a> by Russ Tedrake at MIT</li> <li><a href="https://web.stanford.edu/class/ee364a/">Convex Optimization</a> by Stephen Boyd at Stanford University</li> <li><a href="https://www.youtube.com/watch?v=Kj88Nory8ec&amp;list=PLZnJoM76RM6Jv4f7E7RnzW4rijTUTPI4u">Optimal Control</a> by Zachery Manchester at CMU</li> </ul> <hr/> <h2 id="robot-perception-and-navigation">Robot Perception and Navigation</h2> <h3 id="computer-vision">Computer Vision</h3> <ul> <li><a href="https://www.youtube.com/playlist?list=PLzWRmD0Vi2KVsrCqA4VnztE4t71KnTnP5">Modern Computer Vision</a> at UC Berkeley <h3 id="slam">SLAM</h3> </li> <li><a href="https://www.youtube.com/watch?v=U6vr3iNrwRA&amp;list=PLgnQpQtFTOGQrZ4O5QzbIHgl3b1JHimN_&amp;index=1">Robot Mapping</a> by Cyrill Stachniss at University of Bonn</li> </ul> <hr/> <h2 id="embedded-system">Embedded System</h2> <ul> <li><a href="https://users.ece.utexas.edu/~valvano/Volume1/">Intro to Embedded Systems</a> by Jonathan Valvano at UT Austin <ul> <li><a href="https://www.edx.org/learn/embedded-systems/the-university-of-texas-at-austin-embedded-systems-shape-the-world-microcontroller-input-output">edX</a></li> </ul> </li> </ul>]]></content><author><name></name></author><category term="robotics"/><summary type="html"><![CDATA[Collection of useful resources for learning robotics.]]></summary></entry><entry><title type="html">[CAN] 02 - Setting up SocketCAN on Linux</title><link href="https://dokkev.github.io/socketcan/" rel="alternate" type="text/html" title="[CAN] 02 - Setting up SocketCAN on Linux"/><published>2023-09-02T00:00:00+00:00</published><updated>2023-09-02T00:00:00+00:00</updated><id>https://dokkev.github.io/socketcan</id><content type="html" xml:base="https://dokkev.github.io/socketcan/"><![CDATA[<p>In the previous post <a href="/aboutcan/">What is CAN?</a>, we discussed the basics of CAN bus and its applications in robotics. In this post, we will learn how to set up SocketCAN on Ubuntu computers to set up CAN communication.</p> <h2 id="hardware">Hardware</h2> <p>I will be using USB-CAN adapter to connect my Ubuntu computer to ESP32 with TJA1050 CAN transceiver. Since <a href="https://docs.espressif.com/projects/esp-idf/en/release-v3.3/api-reference/peripherals/can.html">ESP32 already includes CAN controller</a>, we only need CAN transceiver. Note that not every microcontroller comes with CAN controller, so you may need to use external CAN controller like MCP2515.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/can/esp32-480.webp 480w,/assets/img/can/esp32-800.webp 800w,/assets/img/can/esp32-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/can/esp32.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="esp32" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/can/tja-480.webp 480w,/assets/img/can/tja-800.webp 800w,/assets/img/can/tja-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/can/tja.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="tja1050" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/can/usb-can-480.webp 480w,/assets/img/can/usb-can-800.webp 800w,/assets/img/can/usb-can-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/can/usb-can.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="usb-can" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Left: ESP32 Middle: TJA1050 Right: USB-CAN Adapter </div> <p>I have tested the following USB-CAN adapters with SocketCAN on Ubuntu 22.04 with 6.8.0-48-generic kerneal and 5.15.129-rt67 real-time kernel.</p> <ul> <li><a href="https://makerbase3d.com/product/makerbase-canable-v2/?srsltid=AfmBOoo8SgfMBKoPkINomkXkyG8g6XlvwngQso5DAq0qLKPFEoTqkcba">Makerbase CANable 2.0 USB to CAN adapter</a></li> <li><a href="https://www.amazon.com/dp/B07P9JGXXB?ref=ppx_yo2ov_dt_b_product_details&amp;th=1">USB CAN Converter Module</a></li> <li><a href="https://www.peak-system.com/PCAN-USB-FD.365.0.html?&amp;L=1">PCAN-USB FD</a> - make sure to compile the driver with <code class="language-plaintext highlighter-rouge">netdev</code> option. The default is <code class="language-plaintext highlighter-rouge">chardev</code> which is not compatible with SocketCAN.</li> </ul> <h2 id="install-can-utils">Install <code class="language-plaintext highlighter-rouge">can-utils</code></h2>]]></content><author><name></name></author><category term="Hardware Development"/><summary type="html"><![CDATA[Setting up SocketCAN]]></summary></entry><entry><title type="html">[CAN] 01 - What is CAN?</title><link href="https://dokkev.github.io/aboutcan/" rel="alternate" type="text/html" title="[CAN] 01 - What is CAN?"/><published>2023-09-01T00:00:00+00:00</published><updated>2023-09-01T00:00:00+00:00</updated><id>https://dokkev.github.io/aboutcan</id><content type="html" xml:base="https://dokkev.github.io/aboutcan/"><![CDATA[<h1 id="introduction">Introduction</h1> <h3 id="what-is-control-area-network-can">What is Control Area Network (CAN)?</h3> <p>CAN is a communication interface widely used in the automotive industry due to its safety and reliability. CAN allows multiple electronic devices such as sensors and motor controllers to communicate in real-time via shared bus in which distributed CAN Nodes communicate through without a “master device”. CAN is a robust communication interface which can tramsits data over a long distance from 40 meters to 1,000 meters depending on the baudrate in hard coniditon subject to noise, interference, temerature, vibration, etc.</p> <h3 id="how-is-it-used-in-robotics">How is it used in Robotics?</h3> <p>In robotics, the Controller Area Network (CAN) is widely adopted for real-time communication between a host computer and motor driver modules. For complex robots like multi-DOF manipulators or legged robots, each motor driver module typically includes a microcontroller running control algorithms, such as Field-Oriented Control (FoC), to accurately control BLDC (Brushless DC) motors. In this setup, the microcontroller in each motor module calculates the PWM (Pulse Width Modulation) signals needed to control motor phases and achieve the desired movements. These PWM signals are then sent to motor drivers, such as the DRV8313, which uses them to drive the motor’s three phases. The control loop for each motor typically runs at a high frequency over 1 kHz, and a lot of motor driver modules such as ODrive, Mjbots, etc. include CAN controller and transceiver to enable the communication between the microcontroller and host computer.</p> <p>The CAN bus can also support real-time, high-frequency impedance control by closing the control loop through the CAN bus itself, rather than solely relying on the control loop inside the microcontroller in the driver module. Impedance control plays a crucial role for robots that need to adapt their flexibility when interacting with dynamic environments or external forces. This adaptability is especially valuable for legged robots that frequently make and break contact with the environment. Impedance control allows these robots to safely absorb impact upon contact. Legged robots can navigate challenging terrains, avoid obstacles, and maintain balance by constantly adjusting their impedance gains.</p> <p>\(\tau = M(q)\ddot{q} + D(\dot{q}_{d} - \dot{q}) + K(q_{d} - q) + g(q)\)</p> <div class="caption"> Joint Impedance Control Loop where M is the mass matrix, D is the damping matrix, K is the stiffness matrix, and g is the gravity vector with the generalized coordinates q. </div> <p>For example, MIT mini cheetah robot uses CAN bus to communicate with the motor driver modules to achieve real-time impedance control.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/can/mini-cheetah-480.webp 480w,/assets/img/can/mini-cheetah-800.webp 800w,/assets/img/can/mini-cheetah-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/can/mini-cheetah.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="mini-cheetah" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> MIT Mini Cheetah </div> <p>This awesome open-source quadruped robot’s communication structure have been adopted by many other actuators and robot companies.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/can/ak10-9" sizes="95vw"/> <img src="/assets/img/can/ak10-9" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="ak10-9" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/can/go1-480.webp 480w,/assets/img/can/go1-800.webp 800w,/assets/img/can/go1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/can/go1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="go1" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/can/h1-480.webp 480w,/assets/img/can/h1-800.webp 800w,/assets/img/can/h1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/can/h1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="h1" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Robotic Systems with CAN communication Left: CubeMars AK10-9, Middle and Right: Unitree Go1 and H1 </div> <h3 id="limitation-of-can-bus-in-robotics">Limitation of CAN Bus in Robotics</h3> <p>Mini Cheetah has 4 CAN channels while 3 motors are connected to each channel to control total 12 motors. This is one of the limitation of using CAN bus for real-time control robots. The maximum baudrate of CAN bus is 1 Mbps, and the bus can be easily overloaded when the number of motors increases in high control frequency. Assuming the control loop is running at 1 kHz with a tyical non-RTR standard CAN frame with 11 bits of data, the CAN bus is populated with 22,000 bps with command frame and response frame of a single actuator. This is approximately 22.2% of the 1 Mbps CAN bus. Since it’s recommended to keep the CAN bus load less than 70~80%, the maximum number of actuators that can be connected to a single CAN channel is 3. Decreasing the control loop frequencty will reduce the load on the CAN bus, but lower control loop frequency will not only reduce the performance but also increase the instability of the robot.</p>]]></content><author><name></name></author><category term="Hardware Development"/><summary type="html"><![CDATA[What is CAN Bus and how is it used in robotics?]]></summary></entry></feed>